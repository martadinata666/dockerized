variables:
  CI_DOCKERHUB_REGISTRY_IMAGE: "martadinata666/duplicati"
  GITHUB_REPO_NAME: "duplicati/duplicati"
  RELEASE: ""

stages:
  - fetch
  - build

fetch-duplicati:
  image: 192.168.0.2:5050/dedyms/debian:dev
  stage: fetch
  before_script:
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases" | jq -r 'first(.[] | select(.tag_name | contains("canary"))) | .tag_name')
    - echo $RELEASE
    - export ZIPNAME=$(echo $RELEASE | cut -c 12-)
    - export RELEASELINK=$(curl -s https://api.github.com/repos/duplicati/duplicati/releases/tags/"${RELEASE}" |jq -r '.assets[].browser_download_url' |grep ${ZIPNAME}.zip)
  script:
    - curl -o duplicati.zip -L $RELEASELINK
  artifacts:
    paths:
      - duplicati.zip
  only:
    changes:
      - Dockerfile

buildx-stable:
  # Official docker image.
  image: 192.168.0.2:5050/dedyms/docker-with-buildx:latest
  stage: build
  #services:
  #  - docker:dind
  before_script:
    #- apk add curl jq
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases" | jq -r 'first(.[] | select(.tag_name | contains("canary"))) | .tag_name')
    - echo $RELEASE
    - export ZIPNAME=$(echo $RELEASE | cut -c 12-)
    - export RELEASELINK=$(curl -s https://api.github.com/repos/duplicati/duplicati/releases/tags/"${RELEASE}" |jq -r '.assets[].browser_download_url' |grep ${ZIPNAME}.zip)
    #- export RELEASELINK=https://updates.duplicati.com/canary/duplicati-2.0.6.103_canary_2022-06-12.zip
    - echo $RELEASELINK
    - export DATE=$(date +%Y%m%d)
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
    - docker run --rm --privileged 192.168.0.2:5050/dedyms/docker-binfmt-qemu:sid
  script:
    - docker buildx create --use --config buildx-config.toml
    - docker buildx inspect --bootstrap
#    - docker buildx build --push --platform linux/amd64 -t "$CI_REGISTRY_IMAGE:dotnet" . -f Dockerfile
    - docker buildx build --push . --build-arg RELEASE=${RELEASE} --build-arg RELEASELINK=${RELEASELINK} --platform linux/arm64,linux/amd64 -t "$CI_REGISTRY_IMAGE" -t "$CI_REGISTRY_IMAGE:${RELEASE}" -t "$CI_DOCKERHUB_REGISTRY_IMAGE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:${RELEASE}"
  after_script:
    - docker buildx stop
    - docker buildx rm -f
  only:
    refs:
      - master
      - schedules
    changes:
      - Dockerfile

#The following ARG variables are set automatically:
#    TARGETPLATFORM - platform of the build result. Eg linux/amd64, linux/arm/v7, windows/amd64.
#    TARGETOS - OS component of TARGETPLATFORM
#    TARGETARCH - architecture component of TARGETPLATFORM
#    TARGETVARIANT - variant component of TARGETPLATFORM
#    BUILDPLATFORM - platform of the node performing the build.
#    BUILDOS - OS component of BUILDPLATFORM
#    BUILDARCH - architecture component of BUILDPLATFORM
#    BUILDVARIANT - variant component of BUILDPLATFORM
#These arguments are defined in the global scope so are not automatically available inside build stages or for your RUN commands.
#To expose one of these arguments inside the build stage redefine it without value.
