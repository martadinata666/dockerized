server {
        listen 80 default_server;
        #listen [::]:80 default_server;
        listen 443 ssl;
        #listen [::]:8443 ssl default_server
        
        ssl_certificate /etc/ssl/localcerts/nginx.pem;
        ssl_certificate_key /etc/ssl/localcerts/nginx.key;
  
        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html/public;
        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        server_name __;
        error_page 599 = @noauth;
        location / {
                if (!-f /var/www/html/public/.htpasswd) {
                        return 599;
                }
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ /index.php?$args;
                # don't cache it
                proxy_no_cache 1;
                # even if cached, don't try to use it
                proxy_cache_bypass 1; 
        }

        location @noauth {
                try_files $uri $uri/ /index.php?$args;
                # don't cache it
                proxy_no_cache 1;
                # even if cached, don't try to use it
                proxy_cache_bypass 1; 
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass localhost:9000;
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
                # don't cache it
                proxy_no_cache 1;
                # even if cached, don't try to use it
                proxy_cache_bypass 1; 
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
               deny all;
        }
}
