variables:
  GIT_STRATEGY: clone # clone entire repo instead of reusing workspace
  GIT_DEPTH: 1
  CI_DOCKERHUB_REGISTRY_IMAGE: "martadinata666/openssh"
  GITHUB_REPO_NAME: "openssh/openssh-portable"

buildx-stable:
  image: 192.168.0.2:5050/dedyms/docker-with-buildx:latest
  stage: build
  before_script:
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/tags" | jq -r 'first(.[] | .name )')
    - echo $RELEASE
    - export DATE=$(date +%Y%m%d)
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
#    - docker run --rm --privileged 192.168.0.2:5050/dedyms/docker-binfmt-qemu:sid
  script:
    - docker buildx create --use --config buildx-config.toml --name buildx-$CI_PROJECT_NAME --platform linux/amd64 --driver-opt image=moby/buildkit:"$BUILDKIT_VERSION"
#    - docker buildx create --config buildx-config.toml --append "$DOCKER_ARM_HOST" --name buildx-$CI_PROJECT_NAME --platform linux/arm64 --driver-opt image=moby/buildkit:"$BUILDKIT_VERSION"
    - docker buildx inspect --bootstrap
    - docker buildx build --build-arg RELEASE=$RELEASE --push --platform "$BUILD_PLATFORM" -t "$CI_REGISTRY_IMAGE" -t "$CI_REGISTRY_IMAGE:$RELEASE" . -f Dockerfile
  after_script:
    - docker buildx stop
    - docker buildx rm -f
  only:
    refs:
      - master
      - schedules
    changes:
      - Dockerfile

