variables:
  CI_DOCKERHUB_REGISTRY_IMAGE: "index.docker.io/martadinata666/reactive-resume"
  GITHUB_REPO_NAME: "AmruthPillai/Reactive-Resume"
  DEV: ""
  npm_config_cache: "$CI_PROJECT_DIR/.npm-cache"
  PNPM_HOME: "$CI_PROJECT_DIR"
  YARN_CACHE_FOLDER: "$CI_PROJECT_DIR/.yarn-cache"
  GITHUB_REPO_NAME: "AmruthPillai/Reactive-Resume"

stages:
  - build-js
  - dockerized
  - sentry

build-js:
  image: 192.168.0.2:5050/dedyms/node:lts-dev
  stage: build-js
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - store/
      - .next/cache/
    policy: pull-push
  before_script:
    - export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
    - export NODE_ENV=development
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    - echo $RELEASE
    - git clone --depth=1 -b $RELEASE https://github.com/AmruthPillai/Reactive-Resume.git reactive-resume
  script:
    - cd reactive-resume
    - rm -rf docs/
    - pnpm install --frozen-lockfile
    - pnpm run build
    - pnpm run prisma:generate
  artifacts:
    paths:
      - reactive-resume/
  only:
    changes:
      - Dockerfile.v4


buildx-docker:
  needs: ["build-js"]
  image: 192.168.0.2:5050/dedyms/docker-with-buildx:latest
  stage: dockerized
  before_script:
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    #- export RELEASE="git"
    - echo $RELEASE
    - export DATE=$(date +%Y%m%d)
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
#    - docker run --rm --privileged 192.168.0.2:5050/dedyms/docker-binfmt-qemu:sid
  script:
    - docker buildx create --use --config buildx-config.toml --name buildx-$CI_PROJECT_NAME --platform linux/amd64 --driver-opt image=moby/buildkit:"$BUILDKIT_VERSION"
    - docker buildx create --config buildx-config.toml --append "$DOCKER_ARM_HOST" --name buildx-$CI_PROJECT_NAME --platform linux/arm64 --driver-opt image=moby/buildkit:"$BUILDKIT_VERSION"
    - docker buildx inspect --bootstrap
    - docker buildx build --push --platform linux/arm64,linux/amd64 --build-arg RELEASE=$RELEASE .
      -t "$CI_REGISTRY_IMAGE:$RELEASE"
      -t "$CI_REGISTRY_IMAGE"
      -f Dockerfile.v4
  after_script:
    - docker buildx stop
    - docker buildx rm
  only:
    changes:
      - Dockerfile.v4

create-sentry-release-client:
  needs: ["buildx-docker"]
  image: 192.168.0.2:5050/dedyms/debian:dev
  stage: sentry
  before_script:
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    # VAR set in CI secrets
#    - export SENTRY_AUTH_TOKEN=
#    - export SENTRY_ORG=student-rxk
    - export SENTRY_PROJECT=reactive-resume-client
#    - VERSION=`sentry-cli releases propose-version`
  script:
    - curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="2.2.0" bash
    - sentry-cli releases new "$RELEASE"
    - sentry-cli releases set-commits "$RELEASE" --auto --ignore-missing
    - sentry-cli releases finalize "$RELEASE"
  only:
    changes:
      - Dockerfile.v4


create-sentry-release-server:
  needs: ["buildx-docker"]
  image: 192.168.0.2:5050/dedyms/debian:dev
  stage: sentry
  before_script:
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    # VAR set in CI secrets
#    - export SENTRY_AUTH_TOKEN=
#    - export SENTRY_ORG=student-rxk
    - export SENTRY_PROJECT=reactive-resume-server
#    - VERSION=`sentry-cli releases propose-version`
  script:
    - curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="2.2.0" bash
    - sentry-cli releases new "$RELEASE"
    - sentry-cli releases set-commits "$RELEASE" --auto --ignore-missing
    - sentry-cli releases finalize "$RELEASE"
  only:
    changes:
      - Dockerfile.v4

#The following ARG variables are set automatically:
#    TARGETPLATFORM - platform of the build result. Eg linux/amd64, linux/arm/v7, windows/amd64.
#    TARGETOS - OS component of TARGETPLATFORM
#    TARGETARCH - architecture component of TARGETPLATFORM
#    TARGETVARIANT - variant component of TARGETPLATFORM
#    BUILDPLATFORM - platform of the node performing the build.
#    BUILDOS - OS component of BUILDPLATFORM
#    BUILDARCH - architecture component of BUILDPLATFORM
#    BUILDVARIANT - variant component of BUILDPLATFORM
#These arguments are defined in the global scope so are not automatically available inside build stages or for your RUN commands.
#To expose one of these arguments inside the build stage redefine it without value.


.build-js-git:
  image: 192.168.0.2:5050/dedyms/node:lts-dev
  stage: build-js
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - store/
      - .next/cache/
    policy: pull-push
  before_script:
    - export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
    - export NODE_ENV=development
    #- export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    #- echo $RELEASE
    - git clone --depth=1 https://github.com/AmruthPillai/Reactive-Resume.git reactive-resume
  script:
    - cd reactive-resume
    - rm -rf docs/
    - pnpm install --frozen-lockfile
    - pnpm run build
    - pnpm run prisma:generate
    - rm -rf node_modules/
    - rm -rf ./.git
    - rm -rf ./.github
    - rm -rf ./.husky
    - rm -rf ./.vscode
    - rm -rf docs/
    - rm -rf app/
    - rm -rf scripts/*
    - rm -rf Docker*
    - rm -rf docker*
  artifacts:
    paths:
      - reactive-resume/
  only:
    changes:
      - Dockerfile.git
      - .gitlab-ci.yml


.buildx-docker-git:
  needs: ["build-js-git"]
  image: 192.168.0.2:5050/dedyms/docker-with-buildx:latest
  stage: dockerized
  before_script:
    - export RELEASE="git"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
#    - docker run --rm --privileged 192.168.0.2:5050/dedyms/docker-binfmt-qemu:sid
  script:
    - docker buildx create --use --config buildx-config.toml --name buildx-$CI_PROJECT_NAME --platform linux/amd64 --driver-opt image=moby/buildkit:"$BUILDKIT_VERSION"
#    - docker buildx create --config buildx-config.toml --append "$DOCKER_ARM_HOST" --name buildx-$CI_PROJECT_NAME --platform linux/arm64
    - docker buildx inspect --bootstrap
    - docker buildx build --push --platform linux/amd64 --build-arg RELEASE=$RELEASE .
      -t "$CI_REGISTRY_IMAGE:$RELEASE"
      -f Dockerfile.git
  after_script:
    - docker buildx stop
    - docker buildx rm
  only:
    changes:
      - Dockerfile.git
      - .gitlab-ci.yml
