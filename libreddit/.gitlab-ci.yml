variables:
  CI_DOCKERHUB_REGISTRY_IMAGE: "martadinata666/libreddit"
  GITHUB_REPO_NAME: "libreddit/libreddit"
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"
  CARGO_TARGET_DIR: "$CI_PROJECT_DIR/target"
  npm_config_cache: "$CI_PROJECT_DIR/.npm-cache"
  RUSTFLAGS: "-Ctarget-feature=+crt-static"
  OPENSSL_INCLUDE_DIR: "/usr/include/openssl/"
  CARGO_TERM_COLOR: always
  SCCACHE_ENDPOINT: "192.168.0.2:9000"
  SCCACHE_REGION: "us-east-1"
  SCCACHE_BUCKET: "sccache"
  RUSTC_WRAPPER: "/usr/local/bin/sccache"
  DEV: ""

stages:
  - build-bin
  - dockerize

build-bin:
  image: 192.168.0.2:5050/dedyms/rust:latest
  stage: build-bin
  cache:
    key: "$TARGET"
    paths:
      - $CI_PROJECT_DIR/target
      - $CI_PROJECT_DIR/.cargo/registry/index
      - $CI_PROJECT_DIR/.cargo/registry/cache
      - $CI_PROJECT_DIR/.cargo/git/db
    policy: pull-push
  before_script:
    - export SCCACHE_S3_KEY_PREFIX="$CI_PROJECT_NAME-$TARGET"
    - echo $SCCACHE_S3_KEY_PREFIX
    - export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    - echo $RELEASE
    - git clone --depth=1 -b $RELEASE https://github.com/$GITHUB_REPO_NAME.git libreddit
  script:
    - cd libreddit/
    - rustc --version
    - cargo build --target="$TARGET" --release
    - sccache --show-stats
    - ls -al $CI_PROJECT_DIR/target/$TARGET/release
  artifacts:
    paths:
      - $CI_PROJECT_DIR/target/$TARGET/release/libreddit
  only:
    changes:
      - Dockerfile.ci
  parallel:
    matrix:
      - TARGET: [x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu]

.build-bin-aarch64:
  image: 192.168.0.2:5050/dedyms/rust:latest
  stage: build-bin
  cache:
    key: "$CI_COMMIT_REF_SLUG-arm64"
    paths:
      - $CI_PROJECT_DIR/target
      - $CI_PROJECT_DIR/.cargo/bin
      - $CI_PROJECT_DIR/.cargo/registry/index
      - $CI_PROJECT_DIR/.cargo/registry/cache
      - $CI_PROJECT_DIR/.cargo/git/db
    policy: pull-push
  before_script:
    - export OPENSSL_LIB_DIR=/usr/lib/aarch64-linux-gnu/
    - export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
    - export SCCACHE_S3_KEY_PREFIX=arm64
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    - echo $RELEASE
    - git clone --depth=1 -b $RELEASE https://github.com/$GITHUB_REPO_NAME.git libreddit
  script:
    - cd libreddit/
    - rustc --version
    - cargo build --target=aarch64-unknown-linux-gnu --release
    - ls -al $CI_PROJECT_DIR/target/
  artifacts:
    paths:
      - target/aarch64-unknown-linux-gnu/release/libreddit
  only:
    changes:
      - Dockerfile.ci

buildx-dockerize:
  needs: ["build-bin"]
  image: 192.168.0.2:5050/dedyms/docker-with-buildx:latest
  stage: dockerize
  before_script:
    - export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    #- export RELEASE="git"
    - echo $RELEASE
    - ls -al target
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
    - docker run --rm --privileged 192.168.0.2:5050/dedyms/docker-binfmt-qemu:sid
  script:
    - docker buildx create --use --config buildx-config.toml
    - docker buildx inspect --bootstrap
    - docker buildx build --build-arg RELEASE=$RELEASE --push --platform linux/arm64,linux/amd64 -t "$CI_REGISTRY_IMAGE" -t "$CI_REGISTRY_IMAGE:$RELEASE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$RELEASE" . -f Dockerfile.ci
  after_script:
    - docker buildx stop
    - docker buildx rm -f
  only:
    changes:
      - Dockerfile.ci
