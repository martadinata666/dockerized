variables:
  CI_DOCKERHUB_REGISTRY_IMAGE: "martadinata666/mono"
  GITHUB_REPO_NAME: "user/appname"
  FF_USE_FASTZIP: 0

stages:
  - fetch-repo
  - docker-build

get-source:
  image: 192.168.0.2:5050/dedyms/debian:dev
  stage: fetch-repo
  before_script:
    - echo $RELEASE
  script:
    #- git clone --recursive --depth=1 -b mono-$RELEASE https://github.com/mono/mono.git
    - curl -fsSL -o mono-$RELEASE.tar.xz http://192.168.0.2:25000/mono/mono-${RELEASE}.tar.xz
    #- tar xf mono-$RELEASE.tar.xz
  artifacts:
    paths:
      - mono-$RELEASE.tar.xz
  only:
    - triggers


buildx-stable:
  # Official docker image.
  image: 192.168.0.2:5050/dedyms/docker-with-buildx:latest
  stage: docker-build
  #services:
  #  - docker:dind
  before_script:
    #- apk add curl jq
    #- export RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPO_NAME/releases/latest" | jq -r .tag_name)
    #- export RELEASE="6.12.0.122"
    - echo $RELEASE
    - export DATE=$(date +%Y%m%d)
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$CI_DOCKERHUB_REGISTRY_USER" -p "$CI_DOCKERHUB_REGISTRY_PASSWORD" $CI_DOCKERHUB_REGISTRY
#    - docker run --rm --privileged 192.168.0.2:5050/dedyms/docker-binfmt-qemu:sid
  script:
    - docker buildx create --use --config buildx-config.toml --name buildx-mono --platform linux/amd64
    - docker buildx create --config buildx-config.toml --append "$DOCKER_ARM_HOST" --name buildx-mono --platform linux/arm64
    - docker buildx inspect --bootstrap
#    - docker buildx build --push --platform linux/amd64 -t "$CI_REGISTRY_IMAGE" -t "$CI_REGISTRY_IMAGE:$RELEASE" . -f Dockerfile
    - docker buildx build --build-arg RELEASE=$RELEASE --push --platform linux/amd64,linux/arm64 -t "$CI_REGISTRY_IMAGE" -t "$CI_REGISTRY_IMAGE:$RELEASE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE" -t "$CI_DOCKERHUB_REGISTRY_IMAGE:$RELEASE" . -f Dockerfile.build
  after_script:
    - docker buildx stop
    - docker buildx rm
  only:
    - triggers

#The following ARG variables are set automatically:
#    TARGETPLATFORM - platform of the build result. Eg linux/amd64, linux/arm/v7, windows/amd64.
#    TARGETOS - OS component of TARGETPLATFORM
#    TARGETARCH - architecture component of TARGETPLATFORM
#    TARGETVARIANT - variant component of TARGETPLATFORM
#    BUILDPLATFORM - platform of the node performing the build.
#    BUILDOS - OS component of BUILDPLATFORM
#    BUILDARCH - architecture component of BUILDPLATFORM
#    BUILDVARIANT - variant component of BUILDPLATFORM
#These arguments are defined in the global scope so are not automatically available inside build stages or for your RUN commands.
#To expose one of these arguments inside the build stage redefine it without value.
